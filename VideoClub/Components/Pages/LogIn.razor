@page "/login"
@using Microsoft.EntityFrameworkCore
@using VideoClub.Models
@inject IDbContextFactory<VideoClub.Data.VideoClubContext> DbFactory
@inject NavigationManager NavigationManager
@inject VideoClub.Services.SessionService SessionService

<h1>Login</h1>

<EditForm method=post Model="loginModel" OnValidSubmit="HandleLogin" FormName="login">
    <DataAnnotationsValidator />
    <ValidationSummary />
    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger">@errorMessage</div>
    }

    <div class="mb-3">
        <label>Username:</label>
        <InputText @bind-Value="loginModel.Username" class="form-control w-25" />
    </div>

    <div class="mb-3">
        <label>Password:</label>
        <InputText @bind-Value="loginModel.Password" type="password" class="form-control w-25" />
    </div>

    <button type="submit" class="btn btn-primary" style="font-size: 1.2rem; padding: 10px 20px;">Login</button>

    <div class="mt-2">
        <a href="/signup" class="text-muted" style="font-size: 0.85rem;">Want to create an account?</a>
    </div>
</EditForm>

@code {
    [SupplyParameterFromForm]
    private LoginModel loginModel { get; set; } = new();
    private EditContext editContext;
    private string errorMessage;

    protected override void OnInitialized()
    {
        editContext = new EditContext(loginModel);
    }

    private async Task HandleLogin()
    {
        var isValid = editContext.Validate();

        if (isValid && loginModel != null)
        {
            using var context = DbFactory.CreateDbContext();
            var user = await context.Users
                                    .FirstOrDefaultAsync(u => u.Username == loginModel.Username && u.Password == loginModel.Password);

            if (user != null)
            {
                await SessionService.SetUser(user.Username, user.Role);
                NavigationManager.NavigateTo("/", true);
            }
            else
            {
                errorMessage = "Invalid username or password.";
            }
        }
    }
}
